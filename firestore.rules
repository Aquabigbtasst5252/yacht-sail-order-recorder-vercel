rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- Specific rule for the 'orders' collection ---
    match /orders/{orderId} {
      allow read, update: if request.auth != null;

      // Specific sub-collection rule for qcPhotos
      match /qcPhotos/{photoId} {
        allow read, create: if request.auth != null;
        // Role-based delete permission
        allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['super_admin', 'production'];
      }
    }

    // --- Specific rules for other collections ---
    match /users/{userId} {
      // Allows users to read/write their own data, which is more secure
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /settings/main {
      allow read, write: if request.auth != null;
    }

    // --- Add other specific rules for customers, sailTypes, etc. here ---
    // For example:
    // match /customers/{customerId} {
    //   allow read, write: if request.auth != null;
    // }


    // --- ⬇️ CRUCIAL ADDITION: Secure Default Rule ---
    // This is a catch-all rule for ANY document not matched above.
    // It ensures that authenticated users can access other collections
    // like 'customers', 'sailTypes', etc., without being blocked.
    match /{document=**} {
        allow read, write: if request.auth != null;
    }
  }
}